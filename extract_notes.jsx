// http://forums.adobe.com/thread/615381function findPage(theObj) {     if (theObj.hasOwnProperty("baseline")) {          theObj = theObj.parentTextFrames[0];     }     while (theObj !== null) {          if (theObj.hasOwnProperty ("parentPage")) return theObj.parentPage;          var whatIsIt = theObj.constructor;          switch (whatIsIt) {               case Page : return theObj;               case Character : theObj = theObj.parentTextFrames[0]; break;               // case Footnote :;               // drop through               case Cell : theObj = theObj.insertionPoints[0].parentTextFrames[0]; break;               case Note : theObj = theObj.storyOffset; break;               case Application : return null;          }          if (theObj === null) return null;          theObj = theObj.parent;     }     return theObj;} // end findPagefunction getBounds(doc, p) {  var pWidth = doc.documentPreferences.pageWidth;  var pHeight = doc.documentPreferences.pageHeight;  var myX2,myX1,myY1,myY2;  if (p.side == PageSideOptions.leftHand) {     myX2 = p.marginPreferences.left;     myX1 = p.marginPreferences.right;  } else {     myX1 = p.marginPreferences.left;     myX2 = p.marginPreferences.right;  }   myY1 = p.marginPreferences.top;   myX2 = pWidth - myX2;   myY2 = pHeight - p.marginPreferences.bottom;  return [myY1, myX1, myY2, myX2];}var main = function() {  var doc = app.activeDocument;  if (doc.selection.length > 0) {    if (doc.selection[0] instanceof TextFrame) {      var tf = doc.selection[0];      var story = tf.parentStory;      // DumbRunPages(doc, story, true);      var notes = [];      var startpage = tf.parentPage;      // alert(story.contents);      // alert(story.footnotes.length);      // var newcstyle = doc.characterStyles.add({name:"verweisziffern_script"});      for (var i = 0 ; i < story.footnotes.length ; i++) {        var onenote = story.footnotes[i];        // alert(onenote.contents);        var cnt = onenote.contents;        var pgname = findPage(onenote.insertionPoints[0]).name;        onenote.storyOffset.contents = "≈" + String(i+1) +"≈";        // alert(onenote.storyOffset.characters);        // onenote.storyOffset.appliedCharacterStyle = doc.characterStyles.item("verweisziffern_script");        notes.push({          num:String(i + 1),          note: cnt,          page: pgname        });      }      for(var j = story.footnotes.length -1; j >= 0;j--){        story.footnotes[j].remove();      }      // var newdoc = app.documents.add();      var pg = startpage;      var bounds = getBounds(doc, pg);      var y1 = bounds[0];      var x1 = bounds[1];      var y2 = bounds[2];      var x2 = bounds[3];      var half_bounds = [y2/2,x1,y2,x2];      var newtf = pg.textFrames.add({geometricBounds:half_bounds});      var content = "";      for(var key in notes){        if(notes.hasOwnProperty(key)){          content += notes[key].num +" "+ notes[key].note +"\r";        }      }        // alert(content);      newtf.contents = content;      var previousTextFrame = newtf;      for(var p = parseInt(pg.name); p < doc.pages.length -1;p++){        var temptf = doc.pages[p].textFrames.add({          geometricBounds:half_bounds,          previousTextFrame:previousTextFrame          });        previousTextFrame = temptf;      }    }  } else {    alert("Please select a textFrames");  }};main();
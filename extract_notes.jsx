// http://forums.adobe.com/thread/615381function findPage(theObj) {  if (theObj.hasOwnProperty("baseline")) {    theObj = theObj.parentTextFrames[0];  }  while (theObj !== null) {    if (theObj.hasOwnProperty("parentPage")) return theObj.parentPage;    var whatIsIt = theObj.constructor;    switch (whatIsIt) {      case Page:        return theObj;      case Character:        theObj = theObj.parentTextFrames[0];        break;        // case Footnote :;        // drop through      case Cell:        theObj = theObj.insertionPoints[0].parentTextFrames[0];        break;      case Note:        theObj = theObj.storyOffset;        break;      case Application:        return null;    }    if (theObj === null) return null;    theObj = theObj.parent;  }  return theObj;} // end findPagefunction take_out_the_trash(item) {  app.findGrepPreferences = NothingEnum.nothing; // now empty the find what field!!!thats important!!!  app.changeGrepPreferences = NothingEnum.nothing; // empts the change to field!!!thats important!!!  // some settings  app.findChangeGrepOptions.includeFootnotes = true;  app.findChangeGrepOptions.includeHiddenLayers = true;  app.findChangeGrepOptions.includeLockedLayersForFind = true;  app.findChangeGrepOptions.includeLockedStoriesForFind = true;  app.findChangeGrepOptions.includeMasterPages = false;  var greps = [{      "findWhat": "^(\\d{1,100000}\\t)([~F]\\t)",      "changeTo": "$1"    }, //     Find all double spaces and replace with single spaces.  ];  // loop thru the greps object  for (var i = 0; i < greps.length; i++) {    // this is like entering the find what text in the UI    app.findGrepPreferences.findWhat = greps[i].findWhat;    // this is like entering text in the change to    app.changeGrepPreferences.changeTo = greps[i].changeTo;    // and now hit the button    item.changeGrep();    app.findGrepPreferences = NothingEnum.nothing; // now empty the find what field!!!thats important!!!    app.changeGrepPreferences = NothingEnum.nothing; // empts the change to field!!!thats important!!!  }}function getBounds(doc, p) {  var pWidth = doc.documentPreferences.pageWidth;  var pHeight = doc.documentPreferences.pageHeight;  var myX2, myX1, myY1, myY2;  if (p.side == PageSideOptions.leftHand) {    myX2 = p.marginPreferences.left;    myX1 = p.marginPreferences.right;  } else {    myX1 = p.marginPreferences.left;    myX2 = p.marginPreferences.right;  }  myY1 = p.marginPreferences.top;  myX2 = pWidth - myX2;  myY2 = pHeight - p.marginPreferences.bottom;  return [myY1, myX1, myY2, myX2];}// see http://www.indiscripts.com/post/2009/08/restoring-the-footnotes-into-the-story// for this great all undo trick//Application.prototype.main = function() {  var doc = app.activeDocument;  var curr_origin = doc.viewPreferences.rulerOrigin;  doc.viewPreferences.rulerOrigin = RulerOrigin.PAGE_ORIGIN;  if (doc.selection.length > 0) {    if (doc.selection[0] instanceof TextFrame) {      var tf = doc.selection[0];      var story = tf.parentStory;      // DumbRunPages(doc, story, true);      var notes = [];      var startpage = tf.parentPage;      var pg = startpage;      var bounds = getBounds(doc, pg);      var y1 = bounds[0];      var x1 = bounds[1];      var y2 = bounds[2];      var x2 = bounds[3];      var half_bounds = [y2 / 2, x1, y2, x2];      var newtf = pg.textFrames.add({        geometricBounds: half_bounds      });      var previousTextFrame = newtf;      for (var p = parseInt(pg.name); p < doc.pages.length - 1; p++) {        var temptf = doc.pages[p].textFrames.add({          geometricBounds: half_bounds,          previousTextFrame: previousTextFrame        });        previousTextFrame = temptf;      }      var new_story = newtf.parentStory;      for (var i = 0; i < story.footnotes.length; i++) {        var onenote = story.footnotes[i];        var pgname = findPage(onenote.insertionPoints[0]).name;        for (var pa = onenote.paragraphs.length - 1; pa >= 0; pa--) {          var onepar = onenote.paragraphs[pa];          new_story.insertionPoints.item(-1).contents = String(i + 1) + "\t";          onepar.move(LocationOptions.AT_END, new_story);          new_story.insertionPoints.item(-1).contents = "\r";        }        onenote.storyOffset.contents = "≈" + String(i + 1) + "≈";      }      for (var j = story.footnotes.length - 1; j >= 0; j--) {        story.footnotes[j].remove();      }      take_out_the_trash(new_story);    }  } else {    alert("Please select a textFrames");  }  // reset to default  doc.viewPreferences.rulerOrigin = curr_origin;};/** * As you may have noticed, the last instruction runs the app.main() procedure undirectly, using the doScript method. This way, we send the UndoModes.entireScript argument to the interpreter, making the whole script action undoable. * */app.doScript('app.main();', ScriptLanguage.javascript,  undefined, UndoModes.entireScript, app.activeScript.displayName);// main();